// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grid_data.proto

#ifndef PROTOBUF_grid_5fdata_2eproto__INCLUDED
#define PROTOBUF_grid_5fdata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace dsl {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_grid_5fdata_2eproto();
void protobuf_AssignDesc_grid_5fdata_2eproto();
void protobuf_ShutdownFile_grid_5fdata_2eproto();

class GridData;

// ===================================================================

class GridData : public ::google::protobuf::Message {
 public:
  GridData();
  virtual ~GridData();

  GridData(const GridData& from);

  inline GridData& operator=(const GridData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GridData& default_instance();

  void Swap(GridData* other);

  // implements Message ----------------------------------------------

  GridData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GridData& from);
  void MergeFrom(const GridData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 n = 1;
  inline bool has_n() const;
  inline void clear_n();
  static const int kNFieldNumber = 1;
  inline ::google::protobuf::int32 n() const;
  inline void set_n(::google::protobuf::int32 value);

  // required int32 nc = 2;
  inline bool has_nc() const;
  inline void clear_nc();
  static const int kNcFieldNumber = 2;
  inline ::google::protobuf::int32 nc() const;
  inline void set_nc(::google::protobuf::int32 value);

  // repeated double xlb = 3;
  inline int xlb_size() const;
  inline void clear_xlb();
  static const int kXlbFieldNumber = 3;
  inline double xlb(int index) const;
  inline void set_xlb(int index, double value);
  inline void add_xlb(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      xlb() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_xlb();

  // repeated double xub = 4;
  inline int xub_size() const;
  inline void clear_xub();
  static const int kXubFieldNumber = 4;
  inline double xub(int index) const;
  inline void set_xub(int index, double value);
  inline void add_xub(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      xub() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_xub();

  // repeated double ds = 5;
  inline int ds_size() const;
  inline void clear_ds();
  static const int kDsFieldNumber = 5;
  inline double ds(int index) const;
  inline void set_ds(int index, double value);
  inline void add_ds(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      ds() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_ds();

  // repeated double cs = 6;
  inline int cs_size() const;
  inline void clear_cs();
  static const int kCsFieldNumber = 6;
  inline double cs(int index) const;
  inline void set_cs(int index, double value);
  inline void add_cs(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      cs() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_cs();

  // repeated int32 gs = 7;
  inline int gs_size() const;
  inline void clear_gs();
  static const int kGsFieldNumber = 7;
  inline ::google::protobuf::int32 gs(int index) const;
  inline void set_gs(int index, ::google::protobuf::int32 value);
  inline void add_gs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      gs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_gs();

  // repeated int32 cgs = 8;
  inline int cgs_size() const;
  inline void clear_cgs();
  static const int kCgsFieldNumber = 8;
  inline ::google::protobuf::int32 cgs(int index) const;
  inline void set_cgs(int index, ::google::protobuf::int32 value);
  inline void add_cgs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cgs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cgs();

  // repeated bool wd = 9;
  inline int wd_size() const;
  inline void clear_wd();
  static const int kWdFieldNumber = 9;
  inline bool wd(int index) const;
  inline void set_wd(int index, bool value);
  inline void add_wd(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      wd() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_wd();

  // repeated bool cells = 10;
  inline int cells_size() const;
  inline void clear_cells();
  static const int kCellsFieldNumber = 10;
  inline bool cells(int index) const;
  inline void set_cells(int index, bool value);
  inline void add_cells(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      cells() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_cells();

  // @@protoc_insertion_point(class_scope:dsl.GridData)
 private:
  inline void set_has_n();
  inline void clear_has_n();
  inline void set_has_nc();
  inline void clear_has_nc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 n_;
  ::google::protobuf::int32 nc_;
  ::google::protobuf::RepeatedField< double > xlb_;
  ::google::protobuf::RepeatedField< double > xub_;
  ::google::protobuf::RepeatedField< double > ds_;
  ::google::protobuf::RepeatedField< double > cs_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > gs_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cgs_;
  ::google::protobuf::RepeatedField< bool > wd_;
  ::google::protobuf::RepeatedField< bool > cells_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_grid_5fdata_2eproto();
  friend void protobuf_AssignDesc_grid_5fdata_2eproto();
  friend void protobuf_ShutdownFile_grid_5fdata_2eproto();

  void InitAsDefaultInstance();
  static GridData* default_instance_;
};
// ===================================================================


// ===================================================================

// GridData

// required int32 n = 1;
inline bool GridData::has_n() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GridData::set_has_n() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GridData::clear_has_n() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GridData::clear_n() {
  n_ = 0;
  clear_has_n();
}
inline ::google::protobuf::int32 GridData::n() const {
  return n_;
}
inline void GridData::set_n(::google::protobuf::int32 value) {
  set_has_n();
  n_ = value;
}

// required int32 nc = 2;
inline bool GridData::has_nc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GridData::set_has_nc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GridData::clear_has_nc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GridData::clear_nc() {
  nc_ = 0;
  clear_has_nc();
}
inline ::google::protobuf::int32 GridData::nc() const {
  return nc_;
}
inline void GridData::set_nc(::google::protobuf::int32 value) {
  set_has_nc();
  nc_ = value;
}

// repeated double xlb = 3;
inline int GridData::xlb_size() const {
  return xlb_.size();
}
inline void GridData::clear_xlb() {
  xlb_.Clear();
}
inline double GridData::xlb(int index) const {
  return xlb_.Get(index);
}
inline void GridData::set_xlb(int index, double value) {
  xlb_.Set(index, value);
}
inline void GridData::add_xlb(double value) {
  xlb_.Add(value);
}
inline const ::google::protobuf::RepeatedField< double >&
GridData::xlb() const {
  return xlb_;
}
inline ::google::protobuf::RepeatedField< double >*
GridData::mutable_xlb() {
  return &xlb_;
}

// repeated double xub = 4;
inline int GridData::xub_size() const {
  return xub_.size();
}
inline void GridData::clear_xub() {
  xub_.Clear();
}
inline double GridData::xub(int index) const {
  return xub_.Get(index);
}
inline void GridData::set_xub(int index, double value) {
  xub_.Set(index, value);
}
inline void GridData::add_xub(double value) {
  xub_.Add(value);
}
inline const ::google::protobuf::RepeatedField< double >&
GridData::xub() const {
  return xub_;
}
inline ::google::protobuf::RepeatedField< double >*
GridData::mutable_xub() {
  return &xub_;
}

// repeated double ds = 5;
inline int GridData::ds_size() const {
  return ds_.size();
}
inline void GridData::clear_ds() {
  ds_.Clear();
}
inline double GridData::ds(int index) const {
  return ds_.Get(index);
}
inline void GridData::set_ds(int index, double value) {
  ds_.Set(index, value);
}
inline void GridData::add_ds(double value) {
  ds_.Add(value);
}
inline const ::google::protobuf::RepeatedField< double >&
GridData::ds() const {
  return ds_;
}
inline ::google::protobuf::RepeatedField< double >*
GridData::mutable_ds() {
  return &ds_;
}

// repeated double cs = 6;
inline int GridData::cs_size() const {
  return cs_.size();
}
inline void GridData::clear_cs() {
  cs_.Clear();
}
inline double GridData::cs(int index) const {
  return cs_.Get(index);
}
inline void GridData::set_cs(int index, double value) {
  cs_.Set(index, value);
}
inline void GridData::add_cs(double value) {
  cs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< double >&
GridData::cs() const {
  return cs_;
}
inline ::google::protobuf::RepeatedField< double >*
GridData::mutable_cs() {
  return &cs_;
}

// repeated int32 gs = 7;
inline int GridData::gs_size() const {
  return gs_.size();
}
inline void GridData::clear_gs() {
  gs_.Clear();
}
inline ::google::protobuf::int32 GridData::gs(int index) const {
  return gs_.Get(index);
}
inline void GridData::set_gs(int index, ::google::protobuf::int32 value) {
  gs_.Set(index, value);
}
inline void GridData::add_gs(::google::protobuf::int32 value) {
  gs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GridData::gs() const {
  return gs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GridData::mutable_gs() {
  return &gs_;
}

// repeated int32 cgs = 8;
inline int GridData::cgs_size() const {
  return cgs_.size();
}
inline void GridData::clear_cgs() {
  cgs_.Clear();
}
inline ::google::protobuf::int32 GridData::cgs(int index) const {
  return cgs_.Get(index);
}
inline void GridData::set_cgs(int index, ::google::protobuf::int32 value) {
  cgs_.Set(index, value);
}
inline void GridData::add_cgs(::google::protobuf::int32 value) {
  cgs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GridData::cgs() const {
  return cgs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GridData::mutable_cgs() {
  return &cgs_;
}

// repeated bool wd = 9;
inline int GridData::wd_size() const {
  return wd_.size();
}
inline void GridData::clear_wd() {
  wd_.Clear();
}
inline bool GridData::wd(int index) const {
  return wd_.Get(index);
}
inline void GridData::set_wd(int index, bool value) {
  wd_.Set(index, value);
}
inline void GridData::add_wd(bool value) {
  wd_.Add(value);
}
inline const ::google::protobuf::RepeatedField< bool >&
GridData::wd() const {
  return wd_;
}
inline ::google::protobuf::RepeatedField< bool >*
GridData::mutable_wd() {
  return &wd_;
}

// repeated bool cells = 10;
inline int GridData::cells_size() const {
  return cells_.size();
}
inline void GridData::clear_cells() {
  cells_.Clear();
}
inline bool GridData::cells(int index) const {
  return cells_.Get(index);
}
inline void GridData::set_cells(int index, bool value) {
  cells_.Set(index, value);
}
inline void GridData::add_cells(bool value) {
  cells_.Add(value);
}
inline const ::google::protobuf::RepeatedField< bool >&
GridData::cells() const {
  return cells_;
}
inline ::google::protobuf::RepeatedField< bool >*
GridData::mutable_cells() {
  return &cells_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace dsl

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_grid_5fdata_2eproto__INCLUDED
